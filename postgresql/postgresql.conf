##
## /etc/collectd/collectd.conf.d/postgresql.conf
##
LoadPlugin numa
LoadPlugin postgresql

<Plugin postgresql>

  <Query write_activity>
    Statement "SELECT sum(n_tup_ins) AS inserts, sum(n_tup_upd) AS updates, sum(n_tup_del) AS deletes FROM pg_stat_user_tables;"
    <Result>
      Type derive
      InstancePrefix "rows_inserted"
      ValuesFrom "inserts"
    </Result>
    <Result>
      Type derive
      InstancePrefix "rows_updated"
      ValuesFrom "updates"
    </Result>
    <Result>
      Type derive
      InstancePrefix "rows_deleted"
      ValuesFrom "deletes"
    </Result>
  </Query>

  <Query replication_delay>
    Statement "SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))::INT AS seconds;"
    <Result>
      Type gauge
      InstancePrefix "replication_delay"
      ValuesFrom "seconds"
    </Result>
  </Query>

  ## backend state
  <Query backends_active>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state='active';"
    <Result>
      Type gauge
      InstancePrefix "backends_active"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query backends_idle>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state='idle';"
    <Result>
      Type gauge
      InstancePrefix "backends_idle"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query backends_idle_in_transaction>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state='idle in transaction';"
    <Result>
      Type gauge
      InstancePrefix "backends_idle_in_transaction"
      ValuesFrom "count"
    </Result>
  </Query>

  ## locks 
  <Query total_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn;"
    <Result>
      Type gauge
      InstancePrefix "total_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query waiting_lock>
    Statement "SELECT count(*) FROM pg_locks WHERE NOT GRANTED;"
    <Result>
      Type gauge
      InstancePrefix "waiting_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query access_share_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'AccessShareLock';"
    <Result>
      Type gauge
      InstancePrefix "access_share_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query row_share_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'RowShareLock';"
    <Result>
      Type gauge
      InstancePrefix "row_share_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query row_exclusive_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'RowExclusiveLock';"
    <Result>
      Type gauge
      InstancePrefix "row_exclusive_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query share_update_exclusive_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'ShareUpdateExclusiveLock';"
    <Result>
      Type gauge
      InstancePrefix "share_update_exclusive_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query share_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'ShareLock';"
    <Result>
      Type gauge
      InstancePrefix "share_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query share_row_exclusive_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'ShareRowExclusiveLock';"
    <Result>
      Type gauge
      InstancePrefix "share_row_exclusive_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query exclusive_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'ExclusiveLock';"
    <Result>
      Type gauge
      InstancePrefix "exclusive_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query access_exclusive_lock>
    Statement "SELECT count(*) FROM pg_locks l RIGHT JOIN pg_database d ON (d.oid=l.database) WHERE d.datallowconn AND mode = 'AccessExclusiveLock';"
    <Result>
      Type gauge
      InstancePrefix "access_exclusive_lock"
      ValuesFrom "count"
    </Result>
  </Query>

  ## connections
  <Query total_conn>
    Statement "Select count(*) from pg_stat_activity;"
    <Result>
      Type gauge
      InstancePrefix "total_conn"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query active_conn>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state = 'active';"
    <Result>
      Type gauge
      InstancePrefix "active_conn"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query idle_conn>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state = 'idle';"
    <Result>
      Type gauge
      InstancePrefix "idle_conn"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query idle_trans>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state = 'idle in transaction';"
    <Result>
      Type gauge
      InstancePrefix "idle_trans"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query idle_trans_abort>
    Statement "SELECT count(*) FROM pg_stat_activity WHERE state = 'idle in transaction (aborted)';"

    <Result>
      Type gauge
      InstancePrefix "idle_trans_abort"
      ValuesFrom "count"
    </Result>
  </Query>

  <Query trans_commit>
    Statement "SELECT sum(xact_commit) FROM pg_stat_database;"

    <Result>
      Type derive
      InstancePrefix "trans_commit"
      ValuesFrom "sum"
    </Result>
  </Query>

  <Query trans_rollback>
    Statement "SELECT sum(xact_rollback) FROM pg_stat_database;"

    <Result>
      Type derive
      InstancePrefix "trans_rollback"
      ValuesFrom "sum"
    </Result>
  </Query>

  <Database <%= @dbname %>>
    Host "localhost"
    Port "5432"
    User "postgres"
 
    ## replication delay 
    Query replication_delay

    ## backends
    Query backends_active
    Query backends_idle
    Query backends_idle_in_transaction

    ## locks
    Query total_lock
    Query waiting_lock
    Query access_share_lock
    Query row_share_lock
    Query row_exclusive_lock
    Query share_update_exclusive_lock
    Query share_lock
    Query share_row_exclusive_lock
    Query exclusive_lock
    Query access_exclusive_lock
    ## connections
    Query total_conn
    Query active_conn
    Query idle_conn
    Query idle_trans
    Query idle_trans_abort
    ## transactions
    Query trans_commit
    Query trans_rollback
  </Database>
</Plugin>
